data <- read.csv("cardiotocographic.csv", T, ",")
str(data)
library(caTools)
set.seed(234)
split <- sample.split(data, SplitRatio = .75)
train <- subset(data, split == T)
test <- subset(data, split == F)
library(psych)
pairs.panels(training[,-22],
gap= 0,
pch= 21)
pairs.panels(train[,-22],
gap= 0,
pch= 21)
pca <- prcomp(train[,-22],
scale. = T,
center = T)
attributes(pca)
pca$center
print(pca)
summary(pca)
install.packages("devtools")
library(devtools)
install_github("ggbiplot", "vqv")
install_github("ggbiplot", "vqv")
install.packages("ggfortify")
library(ggfortify)
View(data)
autoplot(prcomp(train), data= data, colour = "NSP")
autoplot(prcomp(train), colour = "NSP")
autoplot(prcomp(train), colour = "NSP", loadings= T)
autoplot(prcomp(train), colour = "NSP", loadings= T,
loadings.colour = "blue", loadings.label = T, loadings.label.size=3)
summary(pca)
autoplot(prcomp(train), colour = "NSP", loadings= T,
loadings.colour = "blue", loadings.label = T, loadings.label.size=3,
frame= T, frame.type= "norm")
autoplot(prcomp(train), colour = "NSP", loadings= T,
loadings.colour = "blue", loadings.label = T, loadings.label.size=3,
frame= T, frame.colour= "NSP")
pca.train <- predict(pca, train)
pca.train <- as.data.frame(pca.train, train[,22])
pca.train
head(pca.train)
pca.train <- as.data.frame(pca.train, train[22])
head(train)
dim(train)
?as.data.frame
pca.train <- as.data.frame(pca.train)
pca.train <- train[,22]
head(pca.train)
pca.train <- as.data.frame(pca.train)
head(pca.train)
pca.train <- predict(pca, train)
pca.train <- as.data.frame(pca.train)
head(pca.train)
pca.train <- cbind(pca.train, train[,22])
head(pca.train)
pca.train <- cbind(pca.train, NSP= train[,22])
head(pca.train)
pca.train <- predict(pca, train)
pca.train <- as.data.frame(pca.train)
pca.train <- cbind(pca.train, NSP= train[,22])
head(pca.train)
pca.test <- predict(pca, test)
pca.test <- as.data.frame(pca.test)
pca.test <- cbind(pca.test, NSP= test[,22])
str(pca.train)
pca.train$NSP <- as.factor(pca.train$NSP)
pca.test$NSP <- as.factor(pca.test$NSP)
library(nnet)
pca.train$NSP <- relevel(pca.train$NSP, ref = "1")
summary(pca)
model <- multinom(NSP ~ PC1+PC2+PC3+PC4+PC5+PC6+PC7+PC8+PC9+PC10+PC11+PC12+PC13+PC14)
model <- multinom(NSP ~ PC1+PC2+PC3+PC4+PC5+PC6+PC7+PC8+PC9+PC10+PC11+PC12+PC13+PC14,
data = pca.train)
library(caret)
pred <- predict(model, newdata = pca.train)
confusionMatrix(pred, pca.train$NSP)
pred.test <- predict(model, newdata = pca.test)
confusionMatrix(pred.test, pca.test$NSP)
autoplot(prcomp(train), colour = "NSP", loadings= T,
loadings.colour = "blue", loadings.label = T, loadings.label.size=3,
frame= T, frame.colour= "NSP")
library(randomForest)
model1 <- randomForest(NSP ~ PC1+PC2+PC3+PC4+PC5+PC6+PC7+PC8+PC9+PC10+PC11+PC12+PC13+PC14,
data = pca.train)
pred.trainR <- predict(model1, newdata = pca.train)
confusionMatrix(pred.trainR, pca.train$NSP)
pred.testR <- predict(model1, newdata = pca.test)
confusionMatrix(pred.testR, pca.test$NSP)
confusionMatrix(pred.test, pca.test$NSP)
confusionMatrix(pred.testR, pca.test$NSP)
confusionMatrix(pred.trainR, pca.train$NSP)
